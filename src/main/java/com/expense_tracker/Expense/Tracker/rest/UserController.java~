package com.expense_tracker.Expense.Tracker.rest;

import com.expense_tracker.Expense.Tracker.model.UserDetails;
import com.expense_tracker.Expense.Tracker.model.UserDetailsResponseDTO;
import com.expense_tracker.Expense.Tracker.model.UserRequestDTO;
import com.expense_tracker.Expense.Tracker.model.UserResponseDTO;
import com.expense_tracker.Expense.Tracker.service.User;
import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
public class UserController {

    User user;
    private ModelMapper modelMapper;

    @Autowired
    public UserController(User user,ModelMapper modelMapper) {
        this.user = user;
        this.modelMapper=modelMapper;
    }

    @PostMapping("/user")
    public ResponseEntity<UserResponseDTO> saveUser(@RequestBody UserRequestDTO userRequestDTO) {
        UserDetails userDetails = modelMapper.map(userRequestDTO, UserDetails.class);
        int userID = user.saveUser(userDetails);
        return ResponseEntity.ok(new UserResponseDTO(userID));
    }

    @PutMapping("/user")
    public ResponseEntity<UserResponseDTO> modifyUser(@RequestBody UserRequestDTO userRequestDTO) {
        UserDetails userDetails = modelMapper.map(userRequestDTO, UserDetails.class);
        int userID = user.modifyUserDetails(userDetails);
        return ResponseEntity.ok(new UserResponseDTO(userID));
    }

    @DeleteMapping("/user/{userId}")
    public ResponseEntity<UserResponseDTO> deleteUser(@PathVariable int userId) {
        int userID = user.deleteUser(userId);
        return ResponseEntity.ok(new UserResponseDTO(userID));
    }

    @GetMapping("/user/{userId}")
    public ResponseEntity<UserDetailsResponseDTO> getUser(@PathVariable int userId) {
        UserDetails userDetails =  user.getUser(userId);
        UserDetailsResponseDTO userDetailsResponseDTO = modelMapper.map(userDetails, UserDetailsResponseDTO.class);
        return ResponseEntity.ok(new UserDetailsResponseDTO(userDetailsResponseDTO.userId(), userDetailsResponseDTO.userName(), userDetailsResponseDTO.firstName(), userDetailsResponseDTO.lastName()));
    }

}
